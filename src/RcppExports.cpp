// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// getCPLEXVersion
SEXP getCPLEXVersion();
RcppExport SEXP _cobrarCPLEX_getCPLEXVersion() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getCPLEXVersion());
    return rcpp_result_gen;
END_RCPP
}
// initProb
Rcpp::List initProb(const char* name, double tol_bnd);
RcppExport SEXP _cobrarCPLEX_initProb(SEXP nameSEXP, SEXP tol_bndSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const char* >::type name(nameSEXP);
    Rcpp::traits::input_parameter< double >::type tol_bnd(tol_bndSEXP);
    rcpp_result_gen = Rcpp::wrap(initProb(name, tol_bnd));
    return rcpp_result_gen;
END_RCPP
}
// setObjDirLP
SEXP setObjDirLP(SEXP xpobj, int dir);
RcppExport SEXP _cobrarCPLEX_setObjDirLP(SEXP xpobjSEXP, SEXP dirSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xpobj(xpobjSEXP);
    Rcpp::traits::input_parameter< int >::type dir(dirSEXP);
    rcpp_result_gen = Rcpp::wrap(setObjDirLP(xpobj, dir));
    return rcpp_result_gen;
END_RCPP
}
// addColsLP
SEXP addColsLP(SEXP xpenv, SEXP xpx, SEXP ncols);
RcppExport SEXP _cobrarCPLEX_addColsLP(SEXP xpenvSEXP, SEXP xpxSEXP, SEXP ncolsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xpenv(xpenvSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xpx(xpxSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ncols(ncolsSEXP);
    rcpp_result_gen = Rcpp::wrap(addColsLP(xpenv, xpx, ncols));
    return rcpp_result_gen;
END_RCPP
}
// addRowsLP
SEXP addRowsLP(SEXP xpenv, SEXP xpc, SEXP nrows);
RcppExport SEXP _cobrarCPLEX_addRowsLP(SEXP xpenvSEXP, SEXP xpcSEXP, SEXP nrowsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xpenv(xpenvSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xpc(xpcSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nrows(nrowsSEXP);
    rcpp_result_gen = Rcpp::wrap(addRowsLP(xpenv, xpc, nrows));
    return rcpp_result_gen;
END_RCPP
}
// loadMatrixLP
SEXP loadMatrixLP(SEXP xpx, SEXP xpc, SEXP ne, SEXP ia, SEXP ja, SEXP ra);
RcppExport SEXP _cobrarCPLEX_loadMatrixLP(SEXP xpxSEXP, SEXP xpcSEXP, SEXP neSEXP, SEXP iaSEXP, SEXP jaSEXP, SEXP raSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xpx(xpxSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xpc(xpcSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ne(neSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ia(iaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ja(jaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ra(raSEXP);
    rcpp_result_gen = Rcpp::wrap(loadMatrixLP(xpx, xpc, ne, ia, ja, ra));
    return rcpp_result_gen;
END_RCPP
}
// setColsBndsObjCoefsLP
SEXP setColsBndsObjCoefsLP(SEXP xpobj, SEXP xpx, SEXP indices, SEXP lb, SEXP ub, SEXP objCoefs);
RcppExport SEXP _cobrarCPLEX_setColsBndsObjCoefsLP(SEXP xpobjSEXP, SEXP xpxSEXP, SEXP indicesSEXP, SEXP lbSEXP, SEXP ubSEXP, SEXP objCoefsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xpobj(xpobjSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xpx(xpxSEXP);
    Rcpp::traits::input_parameter< SEXP >::type indices(indicesSEXP);
    Rcpp::traits::input_parameter< SEXP >::type lb(lbSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ub(ubSEXP);
    Rcpp::traits::input_parameter< SEXP >::type objCoefs(objCoefsSEXP);
    rcpp_result_gen = Rcpp::wrap(setColsBndsObjCoefsLP(xpobj, xpx, indices, lb, ub, objCoefs));
    return rcpp_result_gen;
END_RCPP
}
// setRowsBndsLP
SEXP setRowsBndsLP(SEXP xpc, SEXP indices, SEXP lb, SEXP ub);
RcppExport SEXP _cobrarCPLEX_setRowsBndsLP(SEXP xpcSEXP, SEXP indicesSEXP, SEXP lbSEXP, SEXP ubSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xpc(xpcSEXP);
    Rcpp::traits::input_parameter< SEXP >::type indices(indicesSEXP);
    Rcpp::traits::input_parameter< SEXP >::type lb(lbSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ub(ubSEXP);
    rcpp_result_gen = Rcpp::wrap(setRowsBndsLP(xpc, indices, lb, ub));
    return rcpp_result_gen;
END_RCPP
}
// solveCPLEX
SEXP solveCPLEX(SEXP xp, SEXP xpmod, SEXP xpx, SEXP xpc, SEXP xpobj);
RcppExport SEXP _cobrarCPLEX_solveCPLEX(SEXP xpSEXP, SEXP xpmodSEXP, SEXP xpxSEXP, SEXP xpcSEXP, SEXP xpobjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xpmod(xpmodSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xpx(xpxSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xpc(xpcSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xpobj(xpobjSEXP);
    rcpp_result_gen = Rcpp::wrap(solveCPLEX(xp, xpmod, xpx, xpc, xpobj));
    return rcpp_result_gen;
END_RCPP
}
// getSolStatLP
SEXP getSolStatLP(SEXP xp);
RcppExport SEXP _cobrarCPLEX_getSolStatLP(SEXP xpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    rcpp_result_gen = Rcpp::wrap(getSolStatLP(xp));
    return rcpp_result_gen;
END_RCPP
}
// getObjVal
SEXP getObjVal(SEXP xp);
RcppExport SEXP _cobrarCPLEX_getObjVal(SEXP xpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    rcpp_result_gen = Rcpp::wrap(getObjVal(xp));
    return rcpp_result_gen;
END_RCPP
}
// getColsPrimalLP
SEXP getColsPrimalLP(SEXP xp, SEXP xpenv, SEXP xpx);
RcppExport SEXP _cobrarCPLEX_getColsPrimalLP(SEXP xpSEXP, SEXP xpenvSEXP, SEXP xpxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xpenv(xpenvSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xpx(xpxSEXP);
    rcpp_result_gen = Rcpp::wrap(getColsPrimalLP(xp, xpenv, xpx));
    return rcpp_result_gen;
END_RCPP
}
// getColsDualLP
SEXP getColsDualLP(SEXP xp, SEXP xpenv, SEXP xpx);
RcppExport SEXP _cobrarCPLEX_getColsDualLP(SEXP xpSEXP, SEXP xpenvSEXP, SEXP xpxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xpenv(xpenvSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xpx(xpxSEXP);
    rcpp_result_gen = Rcpp::wrap(getColsDualLP(xp, xpenv, xpx));
    return rcpp_result_gen;
END_RCPP
}
// getNumRowsLP
SEXP getNumRowsLP(SEXP xpc);
RcppExport SEXP _cobrarCPLEX_getNumRowsLP(SEXP xpcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xpc(xpcSEXP);
    rcpp_result_gen = Rcpp::wrap(getNumRowsLP(xpc));
    return rcpp_result_gen;
END_RCPP
}
// setMatRowLP
SEXP setMatRowLP(SEXP xpx, SEXP xpc, SEXP i, SEXP len, SEXP ind, SEXP val);
RcppExport SEXP _cobrarCPLEX_setMatRowLP(SEXP xpxSEXP, SEXP xpcSEXP, SEXP iSEXP, SEXP lenSEXP, SEXP indSEXP, SEXP valSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xpx(xpxSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xpc(xpcSEXP);
    Rcpp::traits::input_parameter< SEXP >::type i(iSEXP);
    Rcpp::traits::input_parameter< SEXP >::type len(lenSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ind(indSEXP);
    Rcpp::traits::input_parameter< SEXP >::type val(valSEXP);
    rcpp_result_gen = Rcpp::wrap(setMatRowLP(xpx, xpc, i, len, ind, val));
    return rcpp_result_gen;
END_RCPP
}
// fvaLP
Rcpp::DataFrame fvaLP(SEXP xp, SEXP xpmod, SEXP xpx, SEXP xpc, SEXP xpobj, SEXP ind);
RcppExport SEXP _cobrarCPLEX_fvaLP(SEXP xpSEXP, SEXP xpmodSEXP, SEXP xpxSEXP, SEXP xpcSEXP, SEXP xpobjSEXP, SEXP indSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xpmod(xpmodSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xpx(xpxSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xpc(xpcSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xpobj(xpobjSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ind(indSEXP);
    rcpp_result_gen = Rcpp::wrap(fvaLP(xp, xpmod, xpx, xpc, xpobj, ind));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_cobrarCPLEX_getCPLEXVersion", (DL_FUNC) &_cobrarCPLEX_getCPLEXVersion, 0},
    {"_cobrarCPLEX_initProb", (DL_FUNC) &_cobrarCPLEX_initProb, 2},
    {"_cobrarCPLEX_setObjDirLP", (DL_FUNC) &_cobrarCPLEX_setObjDirLP, 2},
    {"_cobrarCPLEX_addColsLP", (DL_FUNC) &_cobrarCPLEX_addColsLP, 3},
    {"_cobrarCPLEX_addRowsLP", (DL_FUNC) &_cobrarCPLEX_addRowsLP, 3},
    {"_cobrarCPLEX_loadMatrixLP", (DL_FUNC) &_cobrarCPLEX_loadMatrixLP, 6},
    {"_cobrarCPLEX_setColsBndsObjCoefsLP", (DL_FUNC) &_cobrarCPLEX_setColsBndsObjCoefsLP, 6},
    {"_cobrarCPLEX_setRowsBndsLP", (DL_FUNC) &_cobrarCPLEX_setRowsBndsLP, 4},
    {"_cobrarCPLEX_solveCPLEX", (DL_FUNC) &_cobrarCPLEX_solveCPLEX, 5},
    {"_cobrarCPLEX_getSolStatLP", (DL_FUNC) &_cobrarCPLEX_getSolStatLP, 1},
    {"_cobrarCPLEX_getObjVal", (DL_FUNC) &_cobrarCPLEX_getObjVal, 1},
    {"_cobrarCPLEX_getColsPrimalLP", (DL_FUNC) &_cobrarCPLEX_getColsPrimalLP, 3},
    {"_cobrarCPLEX_getColsDualLP", (DL_FUNC) &_cobrarCPLEX_getColsDualLP, 3},
    {"_cobrarCPLEX_getNumRowsLP", (DL_FUNC) &_cobrarCPLEX_getNumRowsLP, 1},
    {"_cobrarCPLEX_setMatRowLP", (DL_FUNC) &_cobrarCPLEX_setMatRowLP, 6},
    {"_cobrarCPLEX_fvaLP", (DL_FUNC) &_cobrarCPLEX_fvaLP, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_cobrarCPLEX(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
